#!/usr/bin/env node

var fs           = require('fs'),
    util         = require('util'),
    colors       = require('colors'),
    async        = require('async'),
    xpushStatus  = require('../lib/xpush-status'),
    argv         = require('optimist').argv;


var help = [
    "usage: xpush-status [actions] [options] ",
    "",
    "Check the status of XPush servers using the specified command-line options",
    "",
    "actions:",
    "  session    Check the status for a session server",
    "  channel    Check the status data for channel servers",
    "",
    "options:",
    "  --config FILE    (mandatory!) Location of the configuration file for the xpush server",
    "  -h, --help       You're staring at it"
].join('\n');

var args = process.argv.slice(2);

if (argv.h || argv.help || /*args.length === 1 ||*/ !argv.config) {
  return util.puts(help);
}

var config = {};
try {
  var data = fs.readFileSync(argv.config);
  config = JSON.parse(data.toString());
} catch (ex) {
  util.puts('Error starting xpush server: ' + ex);
  process.exit(1);
}

switch (args[0]) {
  case 'session':
    xpushStatus.sessionServer(config.zookeeper.address);
    break;

  case 'channel':
    xpushStatus.channelServer(config.zookeeper.address);
    break;

  default:
    async.waterfall([
      function(callback){
        xpushStatus.sessionServer(config.zookeeper.address, function(){
          callback(null);
        });
      },
      function(callback){
        xpushStatus.channelServer(config.zookeeper.address, function(){
          callback(null);
        });
      }
    ], function (err, result) {
       process.stdout.write(' \n');
    });

 }
